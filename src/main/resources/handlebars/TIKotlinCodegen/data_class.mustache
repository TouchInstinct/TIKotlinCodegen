/**
* {{{description}}}
{{#allVars}}
    * @param {{name}} {{{description}}}
{{/allVars}}
*/
{{#if vendorExtensions.x-has-date}}
{{else}}
@JsonClass(generateAdapter = true)
{{/if}}
{{#hasVars}}data {{/hasVars}}class {{classname}} (
{{#allVars}}
    {{#required}}{{>data_class_req_var}}{{^@last}},{{/@last}}{{/required}}{{^required}}{{>data_class_opt_var}}{{^@last}},{{/@last}}{{/required}}
{{/allVars}}
) {
{{#if vendorExtensions.x-has-date}}
    @JsonClass(generateAdapter = true)
    data class {{classname}}Json(
    {{#allVars}}
    {{#required}}{{>data_class_req_var_adapter}}{{^@last}},{{/@last}}{{/required}}{{^required}}{{>data_class_opt_var_adapter}}{{^@last}},{{/@last}}{{/required}}
    {{/allVars}}
    )

    class {{classname}}JsonAdapter() {
        @FromJson
        fun fromJson(json: {{classname}}Json): {{classname}} {
            return {{classname}}(
                {{#allVars}}
                    {{{name}}} = {{#if vendorExtensions.x-is-date-format}}{{packageName}}.DateFormatUtils.fromString(
                            value = json.{{{name}}},
                            format = {{packageName}}.DateFormatUtils.APIDateFormat.{{#if vendorExtensions.x-codegen-is-iso8601-date}}{{#isDate}}DATE_FORMAT{{/isDate}}{{#isDateTime}}DATE_TIME_FORMAT{{/isDateTime}}{{else if vendorExtensions.x-custom-date-format}}{{vendorExtensions.x-codegen-date-format-name}}{{/if}}
                    ){{#required}} ?: throw com.squareup.moshi.JsonDataException("Non-null value '{{{name}}}' was null at {{classname}}"){{/required}}{{else}}json.{{{name}}}{{/if}}{{^@last}},{{/@last}}
                {{/allVars}}
            )
        }

        @ToJson
        fun toJson(model: {{classname}}): {{classname}}Json {
            return {{classname}}Json(
                {{#allVars}}
                    {{{name}}} = {{#if vendorExtensions.x-is-date-format}}{{packageName}}.DateFormatUtils.toString(
                            value = model.{{{name}}},
                            format = {{packageName}}.DateFormatUtils.APIDateFormat.{{#if vendorExtensions.x-codegen-is-iso8601-date}}{{#isDate}}DATE_FORMAT{{/isDate}}{{#isDateTime}}DATE_TIME_FORMAT{{/isDateTime}}{{else if vendorExtensions.x-custom-date-format}}{{vendorExtensions.x-codegen-date-format-name}}{{/if}}
                    ){{else}}model.{{{name}}}{{/if}}{{^@last}},{{/@last}}
                {{/allVars}}
            )
        }
    }
{{/if}}
{{#allVars}}
    {{#isEnum}}

    /**
     * {{{description}}}
     * Values: {{#allowableValues}}{{#enumVars}}{{&name}}{{^@last}},{{/@last}}{{/enumVars}}{{/allowableValues}}
     */
    enum class {{nameInCamelCase}}(val value: {{datatype}}{{#isNullable}}?{{/isNullable}}) {
    {{#allowableValues}}{{#enumVars}}
        {{&name}}({{#value}}{{{value}}}{{/value}}{{^value}}null{{/value}}){{^@last}},{{/@last}}{{#@last}};{{/@last}}
    {{/enumVars}}{{/allowableValues}}

        class JsonAdapter {
            @ToJson
            fun toJson(value: {{nameInCamelCase}}?): String? = value?.value

            @FromJson
            fun fromJson(value: String): {{nameInCamelCase}}? = values()
                    .find { type -> type.value == value }
        }

    }
    {{/isEnum}}
{{/allVars}}
}